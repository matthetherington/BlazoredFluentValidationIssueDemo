@page "/4"
@using Blazored.FluentValidation

<PageTitle>Demo Form 4</PageTitle>

<h1>Demo Form 4</h1>

<p>
    A RuleSet is defined on the CustomerValidator ("AddressOnly"), which will only validate address fields,
    skipping FirstName / LastName.
</p>

<p>
    In this form, the RuleSet is specified when including the validator in the page.
    <pre>@("<FluentValidationValidator Options=\"@(strategy => strategy.IncludeRuleSets(\"AddressOnly\"))\" />")</pre>
</p>

<p>
    A rule exists on CustomerValidator outside a rule set <pre>RuleFor(customer => customer.FirstName).NotEqual("Dave");</pre>
    However, if you enter "Dave" as a First Name, and blur from the field, you will unexpectedly see an error message
    despite requesting only the AddressOnly rule set.
</p>

<p>
    This is because the configuration passed to @("<FluentValidationValidator />") is ignored when validating fields.
    A MemberNameValidatorSelector is passed to the IValidator, which means rules are executed based purely on the property name on which they are defined.
    See <a href="https://github.com/Blazored/FluentValidation/blob/main/src/Blazored.FluentValidation/EditContextFluentValidationExtensions.cs#L78">https://github.com/Blazored/FluentValidation/blob/main/src/Blazored.FluentValidation/EditContextFluentValidationExtensions.cs#L78</a>
</p>

<EditForm Model="@Customer" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
    <FluentValidationValidator Options="@(strategy => strategy.IncludeRuleSets("AddressOnly"))" />
    <ValidationSummary/>

    <DemoForm IsValid="IsValid" Customer="Customer" />
</EditForm>